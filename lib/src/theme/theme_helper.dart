import 'package:crises_control/src/theme/size_utils.dart';
import 'package:flutter/material.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  final Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  final Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [newTheme].
  void changeTheme(String newTheme) {
    _appTheme = newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generatorif (!_supportedCustomColor.containsKey(_appTheme)){  throw Exception(               "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");      } //return theme from map
    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator if (!_supportedColorScheme.containsKey(_appTheme)){   throw Exception(                "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");       }  //return theme from map
    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.blueGray900.withOpacity(0.6),
          fontSize: 16.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blue500,
          fontSize: 10.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.blueGray900.withOpacity(0.53),
          fontSize: 12.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w500,
        ),
        headlineSmall: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 25.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: 22.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 16.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray900.withOpacity(0.6),
          fontSize: 14.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static const primaryColorScheme = ColorScheme.light(
    // On colors(text colors)
    primary: Color(0XFF1E60AA),
    secondaryContainer: Color(0XFFD71D53),

    // On colors(text colors)
    onPrimary: Color(0X90FFFFFF),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber600 => const Color(0XFFFFB500);

  // Black
  Color get black900 => const Color(0XFF000000);

  Color get blackD71D53 => const Color(0XFFD71D53);

  // Blue
  Color get blue500 => const Color(0XFF1E60AA);
  Color get blue501 => const Color(0XFF16A1ED);
  Color get blue5001 => const Color(0XFFEAF3FF);

  // BlueGray
  Color get blueGray400 => const Color(0XFF888888);
  Color get blueGray900 => const Color(0XFF0B223C);
  Color get blueGray10001 => const Color(0XFFCCCCCC);
  Color get blueGray30028 => const Color(0X28A0AAB9);

  // Gray
  Color get gray100 => const Color(0XFFEEF8FF);
  Color get gray30001 => const Color(0XFFD8DFE8);
  Color get gray400 => const Color(0XFFBFBFBF);
  Color get gray10002 => const Color(0XFFF5F5F5);
  Color get gray10004 => const Color(0XFFF2F2F2);
  Color get gray200 => const Color(0XFFEAEAEA);
  Color get gray50 => const Color(0XFFFBFBFB);
  Color get gray5001 => const Color(0XFFF8F8F8);
  Color get gray800 => const Color(0XFF444444);
  Color get gray10001 => const Color(0XFFEEF3F9);

  // IndigoD
  Color get indigo100D1 => const Color(0XD1C2D8E4);

  // Green
  Color get greenA70001 => const Color(0XFF00B60D);

  // White
  Color get whiteA700 => const Color(0XFFFEFEFE);
  Color get whiteA701 => const Color(0XFF000000);

  // Yellow
  Color get yellow900 => const Color(0XFFF97316);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
